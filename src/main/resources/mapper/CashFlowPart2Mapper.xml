<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.CashFlowPart2Mapper">
  <resultMap id="BaseResultMap" type="com.example.demo.bean.CashFlowPart2">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="cash_flow_id" jdbcType="VARCHAR" property="cashFlowId" />
    <result column="manage_cash" jdbcType="DECIMAL" property="manageCash" />
    <result column="sell_work_cash" jdbcType="DECIMAL" property="sellWorkCash" />
    <result column="taxation_return" jdbcType="DECIMAL" property="taxationReturn" />
    <result column="other_manage_cash" jdbcType="DECIMAL" property="otherManageCash" />
    <result column="cash_inflow_finance" jdbcType="DECIMAL" property="cashInflowFinance" />
    <result column="inflow_difference_subject" jdbcType="DECIMAL" property="inflowDifferenceSubject" />
    <result column="inflow_difference_balance" jdbcType="DECIMAL" property="inflowDifferenceBalance" />
    <result column="manage_inflow_subtotal" jdbcType="DECIMAL" property="manageInflowSubtotal" />
    <result column="buy_employ_cash" jdbcType="DECIMAL" property="buyEmployCash" />
    <result column="wage" jdbcType="DECIMAL" property="wage" />
    <result column="pay_tax" jdbcType="DECIMAL" property="payTax" />
    <result column="pay_manage_cash" jdbcType="DECIMAL" property="payManageCash" />
    <result column="cash_outflow_finance" jdbcType="DECIMAL" property="cashOutflowFinance" />
    <result column="outflow_difference_subject" jdbcType="DECIMAL" property="outflowDifferenceSubject" />
    <result column="outflow_difference_balance" jdbcType="DECIMAL" property="outflowDifferenceBalance" />
    <result column="outflow_subtotal" jdbcType="DECIMAL" property="outflowSubtotal" />
    <result column="net_difference_balance" jdbcType="DECIMAL" property="netDifferenceBalance" />
    <result column="manage_flow_net" jdbcType="DECIMAL" property="manageFlowNet" />
    <result column="investment_cash_flow" jdbcType="DECIMAL" property="investmentCashFlow" />
    <result column="withdraw_investment_cash" jdbcType="DECIMAL" property="withdrawInvestmentCash" />
    <result column="receive_investment_earning" jdbcType="DECIMAL" property="receiveInvestmentEarning" />
    <result column="handle_asset_cash" jdbcType="DECIMAL" property="handleAssetCash" />
    <result column="handle_subsidiary_net" jdbcType="DECIMAL" property="handleSubsidiaryNet" />
    <result column="receive_else_investment" jdbcType="DECIMAL" property="receiveElseInvestment" />
    <result column="investment_inflow_subject" jdbcType="DECIMAL" property="investmentInflowSubject" />
    <result column="investment_inflow_balance" jdbcType="DECIMAL" property="investmentInflowBalance" />
    <result column="investmen_inflow_subtotal" jdbcType="DECIMAL" property="investmenInflowSubtotal" />
    <result column="purchase_asset" jdbcType="DECIMAL" property="purchaseAsset" />
    <result column="investment_payment" jdbcType="DECIMAL" property="investmentPayment" />
    <result column="receive_subsidiary_net" jdbcType="DECIMAL" property="receiveSubsidiaryNet" />
    <result column="payment_else_investmen" jdbcType="DECIMAL" property="paymentElseInvestmen" />
    <result column="investment_outflow_subject" jdbcType="DECIMAL" property="investmentOutflowSubject" />
    <result column="investment_outflow_balance" jdbcType="DECIMAL" property="investmentOutflowBalance" />
    <result column="investmen_outflow_subtotal" jdbcType="DECIMAL" property="investmenOutflowSubtotal" />
    <result column="investmen_net_balance" jdbcType="DECIMAL" property="investmenNetBalance" />
    <result column="investmen_flow_net" jdbcType="DECIMAL" property="investmenFlowNet" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="deteledstatus" jdbcType="INTEGER" property="deteledstatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, cash_flow_id, manage_cash, sell_work_cash, taxation_return, other_manage_cash, 
    cash_inflow_finance, inflow_difference_subject, inflow_difference_balance, manage_inflow_subtotal, 
    buy_employ_cash, wage, pay_tax, pay_manage_cash, cash_outflow_finance, outflow_difference_subject, 
    outflow_difference_balance, outflow_subtotal, net_difference_balance, manage_flow_net, 
    investment_cash_flow, withdraw_investment_cash, receive_investment_earning, handle_asset_cash, 
    handle_subsidiary_net, receive_else_investment, investment_inflow_subject, investment_inflow_balance, 
    investmen_inflow_subtotal, purchase_asset, investment_payment, receive_subsidiary_net, 
    payment_else_investmen, investment_outflow_subject, investment_outflow_balance, investmen_outflow_subtotal, 
    investmen_net_balance, investmen_flow_net, create_date, deteledstatus
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.bean.CashFlowPart2Example" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cash_flow_part2
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from cash_flow_part2
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from cash_flow_part2
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.bean.CashFlowPart2Example">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from cash_flow_part2
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.bean.CashFlowPart2">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into cash_flow_part2 (id, cash_flow_id, manage_cash, 
      sell_work_cash, taxation_return, other_manage_cash, 
      cash_inflow_finance, inflow_difference_subject, 
      inflow_difference_balance, manage_inflow_subtotal, 
      buy_employ_cash, wage, pay_tax, 
      pay_manage_cash, cash_outflow_finance, outflow_difference_subject, 
      outflow_difference_balance, outflow_subtotal, 
      net_difference_balance, manage_flow_net, investment_cash_flow, 
      withdraw_investment_cash, receive_investment_earning, 
      handle_asset_cash, handle_subsidiary_net, receive_else_investment, 
      investment_inflow_subject, investment_inflow_balance, 
      investmen_inflow_subtotal, purchase_asset, 
      investment_payment, receive_subsidiary_net, 
      payment_else_investmen, investment_outflow_subject, 
      investment_outflow_balance, investmen_outflow_subtotal, 
      investmen_net_balance, investmen_flow_net, 
      create_date, deteledstatus)
    values (#{id,jdbcType=VARCHAR}, #{cashFlowId,jdbcType=VARCHAR}, #{manageCash,jdbcType=DECIMAL}, 
      #{sellWorkCash,jdbcType=DECIMAL}, #{taxationReturn,jdbcType=DECIMAL}, #{otherManageCash,jdbcType=DECIMAL}, 
      #{cashInflowFinance,jdbcType=DECIMAL}, #{inflowDifferenceSubject,jdbcType=DECIMAL}, 
      #{inflowDifferenceBalance,jdbcType=DECIMAL}, #{manageInflowSubtotal,jdbcType=DECIMAL}, 
      #{buyEmployCash,jdbcType=DECIMAL}, #{wage,jdbcType=DECIMAL}, #{payTax,jdbcType=DECIMAL}, 
      #{payManageCash,jdbcType=DECIMAL}, #{cashOutflowFinance,jdbcType=DECIMAL}, #{outflowDifferenceSubject,jdbcType=DECIMAL}, 
      #{outflowDifferenceBalance,jdbcType=DECIMAL}, #{outflowSubtotal,jdbcType=DECIMAL}, 
      #{netDifferenceBalance,jdbcType=DECIMAL}, #{manageFlowNet,jdbcType=DECIMAL}, #{investmentCashFlow,jdbcType=DECIMAL}, 
      #{withdrawInvestmentCash,jdbcType=DECIMAL}, #{receiveInvestmentEarning,jdbcType=DECIMAL}, 
      #{handleAssetCash,jdbcType=DECIMAL}, #{handleSubsidiaryNet,jdbcType=DECIMAL}, #{receiveElseInvestment,jdbcType=DECIMAL}, 
      #{investmentInflowSubject,jdbcType=DECIMAL}, #{investmentInflowBalance,jdbcType=DECIMAL}, 
      #{investmenInflowSubtotal,jdbcType=DECIMAL}, #{purchaseAsset,jdbcType=DECIMAL}, 
      #{investmentPayment,jdbcType=DECIMAL}, #{receiveSubsidiaryNet,jdbcType=DECIMAL}, 
      #{paymentElseInvestmen,jdbcType=DECIMAL}, #{investmentOutflowSubject,jdbcType=DECIMAL}, 
      #{investmentOutflowBalance,jdbcType=DECIMAL}, #{investmenOutflowSubtotal,jdbcType=DECIMAL}, 
      #{investmenNetBalance,jdbcType=DECIMAL}, #{investmenFlowNet,jdbcType=DECIMAL}, 
      #{createDate,jdbcType=TIMESTAMP}, #{deteledstatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.bean.CashFlowPart2">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into cash_flow_part2
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cashFlowId != null">
        cash_flow_id,
      </if>
      <if test="manageCash != null">
        manage_cash,
      </if>
      <if test="sellWorkCash != null">
        sell_work_cash,
      </if>
      <if test="taxationReturn != null">
        taxation_return,
      </if>
      <if test="otherManageCash != null">
        other_manage_cash,
      </if>
      <if test="cashInflowFinance != null">
        cash_inflow_finance,
      </if>
      <if test="inflowDifferenceSubject != null">
        inflow_difference_subject,
      </if>
      <if test="inflowDifferenceBalance != null">
        inflow_difference_balance,
      </if>
      <if test="manageInflowSubtotal != null">
        manage_inflow_subtotal,
      </if>
      <if test="buyEmployCash != null">
        buy_employ_cash,
      </if>
      <if test="wage != null">
        wage,
      </if>
      <if test="payTax != null">
        pay_tax,
      </if>
      <if test="payManageCash != null">
        pay_manage_cash,
      </if>
      <if test="cashOutflowFinance != null">
        cash_outflow_finance,
      </if>
      <if test="outflowDifferenceSubject != null">
        outflow_difference_subject,
      </if>
      <if test="outflowDifferenceBalance != null">
        outflow_difference_balance,
      </if>
      <if test="outflowSubtotal != null">
        outflow_subtotal,
      </if>
      <if test="netDifferenceBalance != null">
        net_difference_balance,
      </if>
      <if test="manageFlowNet != null">
        manage_flow_net,
      </if>
      <if test="investmentCashFlow != null">
        investment_cash_flow,
      </if>
      <if test="withdrawInvestmentCash != null">
        withdraw_investment_cash,
      </if>
      <if test="receiveInvestmentEarning != null">
        receive_investment_earning,
      </if>
      <if test="handleAssetCash != null">
        handle_asset_cash,
      </if>
      <if test="handleSubsidiaryNet != null">
        handle_subsidiary_net,
      </if>
      <if test="receiveElseInvestment != null">
        receive_else_investment,
      </if>
      <if test="investmentInflowSubject != null">
        investment_inflow_subject,
      </if>
      <if test="investmentInflowBalance != null">
        investment_inflow_balance,
      </if>
      <if test="investmenInflowSubtotal != null">
        investmen_inflow_subtotal,
      </if>
      <if test="purchaseAsset != null">
        purchase_asset,
      </if>
      <if test="investmentPayment != null">
        investment_payment,
      </if>
      <if test="receiveSubsidiaryNet != null">
        receive_subsidiary_net,
      </if>
      <if test="paymentElseInvestmen != null">
        payment_else_investmen,
      </if>
      <if test="investmentOutflowSubject != null">
        investment_outflow_subject,
      </if>
      <if test="investmentOutflowBalance != null">
        investment_outflow_balance,
      </if>
      <if test="investmenOutflowSubtotal != null">
        investmen_outflow_subtotal,
      </if>
      <if test="investmenNetBalance != null">
        investmen_net_balance,
      </if>
      <if test="investmenFlowNet != null">
        investmen_flow_net,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="deteledstatus != null">
        deteledstatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="cashFlowId != null">
        #{cashFlowId,jdbcType=VARCHAR},
      </if>
      <if test="manageCash != null">
        #{manageCash,jdbcType=DECIMAL},
      </if>
      <if test="sellWorkCash != null">
        #{sellWorkCash,jdbcType=DECIMAL},
      </if>
      <if test="taxationReturn != null">
        #{taxationReturn,jdbcType=DECIMAL},
      </if>
      <if test="otherManageCash != null">
        #{otherManageCash,jdbcType=DECIMAL},
      </if>
      <if test="cashInflowFinance != null">
        #{cashInflowFinance,jdbcType=DECIMAL},
      </if>
      <if test="inflowDifferenceSubject != null">
        #{inflowDifferenceSubject,jdbcType=DECIMAL},
      </if>
      <if test="inflowDifferenceBalance != null">
        #{inflowDifferenceBalance,jdbcType=DECIMAL},
      </if>
      <if test="manageInflowSubtotal != null">
        #{manageInflowSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="buyEmployCash != null">
        #{buyEmployCash,jdbcType=DECIMAL},
      </if>
      <if test="wage != null">
        #{wage,jdbcType=DECIMAL},
      </if>
      <if test="payTax != null">
        #{payTax,jdbcType=DECIMAL},
      </if>
      <if test="payManageCash != null">
        #{payManageCash,jdbcType=DECIMAL},
      </if>
      <if test="cashOutflowFinance != null">
        #{cashOutflowFinance,jdbcType=DECIMAL},
      </if>
      <if test="outflowDifferenceSubject != null">
        #{outflowDifferenceSubject,jdbcType=DECIMAL},
      </if>
      <if test="outflowDifferenceBalance != null">
        #{outflowDifferenceBalance,jdbcType=DECIMAL},
      </if>
      <if test="outflowSubtotal != null">
        #{outflowSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="netDifferenceBalance != null">
        #{netDifferenceBalance,jdbcType=DECIMAL},
      </if>
      <if test="manageFlowNet != null">
        #{manageFlowNet,jdbcType=DECIMAL},
      </if>
      <if test="investmentCashFlow != null">
        #{investmentCashFlow,jdbcType=DECIMAL},
      </if>
      <if test="withdrawInvestmentCash != null">
        #{withdrawInvestmentCash,jdbcType=DECIMAL},
      </if>
      <if test="receiveInvestmentEarning != null">
        #{receiveInvestmentEarning,jdbcType=DECIMAL},
      </if>
      <if test="handleAssetCash != null">
        #{handleAssetCash,jdbcType=DECIMAL},
      </if>
      <if test="handleSubsidiaryNet != null">
        #{handleSubsidiaryNet,jdbcType=DECIMAL},
      </if>
      <if test="receiveElseInvestment != null">
        #{receiveElseInvestment,jdbcType=DECIMAL},
      </if>
      <if test="investmentInflowSubject != null">
        #{investmentInflowSubject,jdbcType=DECIMAL},
      </if>
      <if test="investmentInflowBalance != null">
        #{investmentInflowBalance,jdbcType=DECIMAL},
      </if>
      <if test="investmenInflowSubtotal != null">
        #{investmenInflowSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="purchaseAsset != null">
        #{purchaseAsset,jdbcType=DECIMAL},
      </if>
      <if test="investmentPayment != null">
        #{investmentPayment,jdbcType=DECIMAL},
      </if>
      <if test="receiveSubsidiaryNet != null">
        #{receiveSubsidiaryNet,jdbcType=DECIMAL},
      </if>
      <if test="paymentElseInvestmen != null">
        #{paymentElseInvestmen,jdbcType=DECIMAL},
      </if>
      <if test="investmentOutflowSubject != null">
        #{investmentOutflowSubject,jdbcType=DECIMAL},
      </if>
      <if test="investmentOutflowBalance != null">
        #{investmentOutflowBalance,jdbcType=DECIMAL},
      </if>
      <if test="investmenOutflowSubtotal != null">
        #{investmenOutflowSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="investmenNetBalance != null">
        #{investmenNetBalance,jdbcType=DECIMAL},
      </if>
      <if test="investmenFlowNet != null">
        #{investmenFlowNet,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deteledstatus != null">
        #{deteledstatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.bean.CashFlowPart2Example" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from cash_flow_part2
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update cash_flow_part2
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.cashFlowId != null">
        cash_flow_id = #{record.cashFlowId,jdbcType=VARCHAR},
      </if>
      <if test="record.manageCash != null">
        manage_cash = #{record.manageCash,jdbcType=DECIMAL},
      </if>
      <if test="record.sellWorkCash != null">
        sell_work_cash = #{record.sellWorkCash,jdbcType=DECIMAL},
      </if>
      <if test="record.taxationReturn != null">
        taxation_return = #{record.taxationReturn,jdbcType=DECIMAL},
      </if>
      <if test="record.otherManageCash != null">
        other_manage_cash = #{record.otherManageCash,jdbcType=DECIMAL},
      </if>
      <if test="record.cashInflowFinance != null">
        cash_inflow_finance = #{record.cashInflowFinance,jdbcType=DECIMAL},
      </if>
      <if test="record.inflowDifferenceSubject != null">
        inflow_difference_subject = #{record.inflowDifferenceSubject,jdbcType=DECIMAL},
      </if>
      <if test="record.inflowDifferenceBalance != null">
        inflow_difference_balance = #{record.inflowDifferenceBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.manageInflowSubtotal != null">
        manage_inflow_subtotal = #{record.manageInflowSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="record.buyEmployCash != null">
        buy_employ_cash = #{record.buyEmployCash,jdbcType=DECIMAL},
      </if>
      <if test="record.wage != null">
        wage = #{record.wage,jdbcType=DECIMAL},
      </if>
      <if test="record.payTax != null">
        pay_tax = #{record.payTax,jdbcType=DECIMAL},
      </if>
      <if test="record.payManageCash != null">
        pay_manage_cash = #{record.payManageCash,jdbcType=DECIMAL},
      </if>
      <if test="record.cashOutflowFinance != null">
        cash_outflow_finance = #{record.cashOutflowFinance,jdbcType=DECIMAL},
      </if>
      <if test="record.outflowDifferenceSubject != null">
        outflow_difference_subject = #{record.outflowDifferenceSubject,jdbcType=DECIMAL},
      </if>
      <if test="record.outflowDifferenceBalance != null">
        outflow_difference_balance = #{record.outflowDifferenceBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.outflowSubtotal != null">
        outflow_subtotal = #{record.outflowSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="record.netDifferenceBalance != null">
        net_difference_balance = #{record.netDifferenceBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.manageFlowNet != null">
        manage_flow_net = #{record.manageFlowNet,jdbcType=DECIMAL},
      </if>
      <if test="record.investmentCashFlow != null">
        investment_cash_flow = #{record.investmentCashFlow,jdbcType=DECIMAL},
      </if>
      <if test="record.withdrawInvestmentCash != null">
        withdraw_investment_cash = #{record.withdrawInvestmentCash,jdbcType=DECIMAL},
      </if>
      <if test="record.receiveInvestmentEarning != null">
        receive_investment_earning = #{record.receiveInvestmentEarning,jdbcType=DECIMAL},
      </if>
      <if test="record.handleAssetCash != null">
        handle_asset_cash = #{record.handleAssetCash,jdbcType=DECIMAL},
      </if>
      <if test="record.handleSubsidiaryNet != null">
        handle_subsidiary_net = #{record.handleSubsidiaryNet,jdbcType=DECIMAL},
      </if>
      <if test="record.receiveElseInvestment != null">
        receive_else_investment = #{record.receiveElseInvestment,jdbcType=DECIMAL},
      </if>
      <if test="record.investmentInflowSubject != null">
        investment_inflow_subject = #{record.investmentInflowSubject,jdbcType=DECIMAL},
      </if>
      <if test="record.investmentInflowBalance != null">
        investment_inflow_balance = #{record.investmentInflowBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.investmenInflowSubtotal != null">
        investmen_inflow_subtotal = #{record.investmenInflowSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="record.purchaseAsset != null">
        purchase_asset = #{record.purchaseAsset,jdbcType=DECIMAL},
      </if>
      <if test="record.investmentPayment != null">
        investment_payment = #{record.investmentPayment,jdbcType=DECIMAL},
      </if>
      <if test="record.receiveSubsidiaryNet != null">
        receive_subsidiary_net = #{record.receiveSubsidiaryNet,jdbcType=DECIMAL},
      </if>
      <if test="record.paymentElseInvestmen != null">
        payment_else_investmen = #{record.paymentElseInvestmen,jdbcType=DECIMAL},
      </if>
      <if test="record.investmentOutflowSubject != null">
        investment_outflow_subject = #{record.investmentOutflowSubject,jdbcType=DECIMAL},
      </if>
      <if test="record.investmentOutflowBalance != null">
        investment_outflow_balance = #{record.investmentOutflowBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.investmenOutflowSubtotal != null">
        investmen_outflow_subtotal = #{record.investmenOutflowSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="record.investmenNetBalance != null">
        investmen_net_balance = #{record.investmenNetBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.investmenFlowNet != null">
        investmen_flow_net = #{record.investmenFlowNet,jdbcType=DECIMAL},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deteledstatus != null">
        deteledstatus = #{record.deteledstatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update cash_flow_part2
    set id = #{record.id,jdbcType=VARCHAR},
      cash_flow_id = #{record.cashFlowId,jdbcType=VARCHAR},
      manage_cash = #{record.manageCash,jdbcType=DECIMAL},
      sell_work_cash = #{record.sellWorkCash,jdbcType=DECIMAL},
      taxation_return = #{record.taxationReturn,jdbcType=DECIMAL},
      other_manage_cash = #{record.otherManageCash,jdbcType=DECIMAL},
      cash_inflow_finance = #{record.cashInflowFinance,jdbcType=DECIMAL},
      inflow_difference_subject = #{record.inflowDifferenceSubject,jdbcType=DECIMAL},
      inflow_difference_balance = #{record.inflowDifferenceBalance,jdbcType=DECIMAL},
      manage_inflow_subtotal = #{record.manageInflowSubtotal,jdbcType=DECIMAL},
      buy_employ_cash = #{record.buyEmployCash,jdbcType=DECIMAL},
      wage = #{record.wage,jdbcType=DECIMAL},
      pay_tax = #{record.payTax,jdbcType=DECIMAL},
      pay_manage_cash = #{record.payManageCash,jdbcType=DECIMAL},
      cash_outflow_finance = #{record.cashOutflowFinance,jdbcType=DECIMAL},
      outflow_difference_subject = #{record.outflowDifferenceSubject,jdbcType=DECIMAL},
      outflow_difference_balance = #{record.outflowDifferenceBalance,jdbcType=DECIMAL},
      outflow_subtotal = #{record.outflowSubtotal,jdbcType=DECIMAL},
      net_difference_balance = #{record.netDifferenceBalance,jdbcType=DECIMAL},
      manage_flow_net = #{record.manageFlowNet,jdbcType=DECIMAL},
      investment_cash_flow = #{record.investmentCashFlow,jdbcType=DECIMAL},
      withdraw_investment_cash = #{record.withdrawInvestmentCash,jdbcType=DECIMAL},
      receive_investment_earning = #{record.receiveInvestmentEarning,jdbcType=DECIMAL},
      handle_asset_cash = #{record.handleAssetCash,jdbcType=DECIMAL},
      handle_subsidiary_net = #{record.handleSubsidiaryNet,jdbcType=DECIMAL},
      receive_else_investment = #{record.receiveElseInvestment,jdbcType=DECIMAL},
      investment_inflow_subject = #{record.investmentInflowSubject,jdbcType=DECIMAL},
      investment_inflow_balance = #{record.investmentInflowBalance,jdbcType=DECIMAL},
      investmen_inflow_subtotal = #{record.investmenInflowSubtotal,jdbcType=DECIMAL},
      purchase_asset = #{record.purchaseAsset,jdbcType=DECIMAL},
      investment_payment = #{record.investmentPayment,jdbcType=DECIMAL},
      receive_subsidiary_net = #{record.receiveSubsidiaryNet,jdbcType=DECIMAL},
      payment_else_investmen = #{record.paymentElseInvestmen,jdbcType=DECIMAL},
      investment_outflow_subject = #{record.investmentOutflowSubject,jdbcType=DECIMAL},
      investment_outflow_balance = #{record.investmentOutflowBalance,jdbcType=DECIMAL},
      investmen_outflow_subtotal = #{record.investmenOutflowSubtotal,jdbcType=DECIMAL},
      investmen_net_balance = #{record.investmenNetBalance,jdbcType=DECIMAL},
      investmen_flow_net = #{record.investmenFlowNet,jdbcType=DECIMAL},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      deteledstatus = #{record.deteledstatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.bean.CashFlowPart2">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update cash_flow_part2
    <set>
      <if test="cashFlowId != null">
        cash_flow_id = #{cashFlowId,jdbcType=VARCHAR},
      </if>
      <if test="manageCash != null">
        manage_cash = #{manageCash,jdbcType=DECIMAL},
      </if>
      <if test="sellWorkCash != null">
        sell_work_cash = #{sellWorkCash,jdbcType=DECIMAL},
      </if>
      <if test="taxationReturn != null">
        taxation_return = #{taxationReturn,jdbcType=DECIMAL},
      </if>
      <if test="otherManageCash != null">
        other_manage_cash = #{otherManageCash,jdbcType=DECIMAL},
      </if>
      <if test="cashInflowFinance != null">
        cash_inflow_finance = #{cashInflowFinance,jdbcType=DECIMAL},
      </if>
      <if test="inflowDifferenceSubject != null">
        inflow_difference_subject = #{inflowDifferenceSubject,jdbcType=DECIMAL},
      </if>
      <if test="inflowDifferenceBalance != null">
        inflow_difference_balance = #{inflowDifferenceBalance,jdbcType=DECIMAL},
      </if>
      <if test="manageInflowSubtotal != null">
        manage_inflow_subtotal = #{manageInflowSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="buyEmployCash != null">
        buy_employ_cash = #{buyEmployCash,jdbcType=DECIMAL},
      </if>
      <if test="wage != null">
        wage = #{wage,jdbcType=DECIMAL},
      </if>
      <if test="payTax != null">
        pay_tax = #{payTax,jdbcType=DECIMAL},
      </if>
      <if test="payManageCash != null">
        pay_manage_cash = #{payManageCash,jdbcType=DECIMAL},
      </if>
      <if test="cashOutflowFinance != null">
        cash_outflow_finance = #{cashOutflowFinance,jdbcType=DECIMAL},
      </if>
      <if test="outflowDifferenceSubject != null">
        outflow_difference_subject = #{outflowDifferenceSubject,jdbcType=DECIMAL},
      </if>
      <if test="outflowDifferenceBalance != null">
        outflow_difference_balance = #{outflowDifferenceBalance,jdbcType=DECIMAL},
      </if>
      <if test="outflowSubtotal != null">
        outflow_subtotal = #{outflowSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="netDifferenceBalance != null">
        net_difference_balance = #{netDifferenceBalance,jdbcType=DECIMAL},
      </if>
      <if test="manageFlowNet != null">
        manage_flow_net = #{manageFlowNet,jdbcType=DECIMAL},
      </if>
      <if test="investmentCashFlow != null">
        investment_cash_flow = #{investmentCashFlow,jdbcType=DECIMAL},
      </if>
      <if test="withdrawInvestmentCash != null">
        withdraw_investment_cash = #{withdrawInvestmentCash,jdbcType=DECIMAL},
      </if>
      <if test="receiveInvestmentEarning != null">
        receive_investment_earning = #{receiveInvestmentEarning,jdbcType=DECIMAL},
      </if>
      <if test="handleAssetCash != null">
        handle_asset_cash = #{handleAssetCash,jdbcType=DECIMAL},
      </if>
      <if test="handleSubsidiaryNet != null">
        handle_subsidiary_net = #{handleSubsidiaryNet,jdbcType=DECIMAL},
      </if>
      <if test="receiveElseInvestment != null">
        receive_else_investment = #{receiveElseInvestment,jdbcType=DECIMAL},
      </if>
      <if test="investmentInflowSubject != null">
        investment_inflow_subject = #{investmentInflowSubject,jdbcType=DECIMAL},
      </if>
      <if test="investmentInflowBalance != null">
        investment_inflow_balance = #{investmentInflowBalance,jdbcType=DECIMAL},
      </if>
      <if test="investmenInflowSubtotal != null">
        investmen_inflow_subtotal = #{investmenInflowSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="purchaseAsset != null">
        purchase_asset = #{purchaseAsset,jdbcType=DECIMAL},
      </if>
      <if test="investmentPayment != null">
        investment_payment = #{investmentPayment,jdbcType=DECIMAL},
      </if>
      <if test="receiveSubsidiaryNet != null">
        receive_subsidiary_net = #{receiveSubsidiaryNet,jdbcType=DECIMAL},
      </if>
      <if test="paymentElseInvestmen != null">
        payment_else_investmen = #{paymentElseInvestmen,jdbcType=DECIMAL},
      </if>
      <if test="investmentOutflowSubject != null">
        investment_outflow_subject = #{investmentOutflowSubject,jdbcType=DECIMAL},
      </if>
      <if test="investmentOutflowBalance != null">
        investment_outflow_balance = #{investmentOutflowBalance,jdbcType=DECIMAL},
      </if>
      <if test="investmenOutflowSubtotal != null">
        investmen_outflow_subtotal = #{investmenOutflowSubtotal,jdbcType=DECIMAL},
      </if>
      <if test="investmenNetBalance != null">
        investmen_net_balance = #{investmenNetBalance,jdbcType=DECIMAL},
      </if>
      <if test="investmenFlowNet != null">
        investmen_flow_net = #{investmenFlowNet,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deteledstatus != null">
        deteledstatus = #{deteledstatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.bean.CashFlowPart2">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update cash_flow_part2
    set cash_flow_id = #{cashFlowId,jdbcType=VARCHAR},
      manage_cash = #{manageCash,jdbcType=DECIMAL},
      sell_work_cash = #{sellWorkCash,jdbcType=DECIMAL},
      taxation_return = #{taxationReturn,jdbcType=DECIMAL},
      other_manage_cash = #{otherManageCash,jdbcType=DECIMAL},
      cash_inflow_finance = #{cashInflowFinance,jdbcType=DECIMAL},
      inflow_difference_subject = #{inflowDifferenceSubject,jdbcType=DECIMAL},
      inflow_difference_balance = #{inflowDifferenceBalance,jdbcType=DECIMAL},
      manage_inflow_subtotal = #{manageInflowSubtotal,jdbcType=DECIMAL},
      buy_employ_cash = #{buyEmployCash,jdbcType=DECIMAL},
      wage = #{wage,jdbcType=DECIMAL},
      pay_tax = #{payTax,jdbcType=DECIMAL},
      pay_manage_cash = #{payManageCash,jdbcType=DECIMAL},
      cash_outflow_finance = #{cashOutflowFinance,jdbcType=DECIMAL},
      outflow_difference_subject = #{outflowDifferenceSubject,jdbcType=DECIMAL},
      outflow_difference_balance = #{outflowDifferenceBalance,jdbcType=DECIMAL},
      outflow_subtotal = #{outflowSubtotal,jdbcType=DECIMAL},
      net_difference_balance = #{netDifferenceBalance,jdbcType=DECIMAL},
      manage_flow_net = #{manageFlowNet,jdbcType=DECIMAL},
      investment_cash_flow = #{investmentCashFlow,jdbcType=DECIMAL},
      withdraw_investment_cash = #{withdrawInvestmentCash,jdbcType=DECIMAL},
      receive_investment_earning = #{receiveInvestmentEarning,jdbcType=DECIMAL},
      handle_asset_cash = #{handleAssetCash,jdbcType=DECIMAL},
      handle_subsidiary_net = #{handleSubsidiaryNet,jdbcType=DECIMAL},
      receive_else_investment = #{receiveElseInvestment,jdbcType=DECIMAL},
      investment_inflow_subject = #{investmentInflowSubject,jdbcType=DECIMAL},
      investment_inflow_balance = #{investmentInflowBalance,jdbcType=DECIMAL},
      investmen_inflow_subtotal = #{investmenInflowSubtotal,jdbcType=DECIMAL},
      purchase_asset = #{purchaseAsset,jdbcType=DECIMAL},
      investment_payment = #{investmentPayment,jdbcType=DECIMAL},
      receive_subsidiary_net = #{receiveSubsidiaryNet,jdbcType=DECIMAL},
      payment_else_investmen = #{paymentElseInvestmen,jdbcType=DECIMAL},
      investment_outflow_subject = #{investmentOutflowSubject,jdbcType=DECIMAL},
      investment_outflow_balance = #{investmentOutflowBalance,jdbcType=DECIMAL},
      investmen_outflow_subtotal = #{investmenOutflowSubtotal,jdbcType=DECIMAL},
      investmen_net_balance = #{investmenNetBalance,jdbcType=DECIMAL},
      investmen_flow_net = #{investmenFlowNet,jdbcType=DECIMAL},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      deteledstatus = #{deteledstatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
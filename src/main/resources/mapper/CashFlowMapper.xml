<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.CashFlowMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.bean.CashFlow">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="stockitemid" jdbcType="VARCHAR" property="stockitemid" />
    <result column="report_date" jdbcType="VARCHAR" property="reportDate" />
    <result column="report_type" jdbcType="VARCHAR" property="reportType" />
    <result column="financing_cash" jdbcType="DECIMAL" property="financingCash" />
    <result column="investment_cash" jdbcType="DECIMAL" property="investmentCash" />
    <result column="subsidiary_shareholder" jdbcType="DECIMAL" property="subsidiaryShareholder" />
    <result column="cash_loan" jdbcType="DECIMAL" property="cashLoan" />
    <result column="other_financing" jdbcType="DECIMAL" property="otherFinancing" />
    <result column="bond_cash" jdbcType="DECIMAL" property="bondCash" />
    <result column="special_financing_inflow" jdbcType="DECIMAL" property="specialFinancingInflow" />
    <result column="balance_financing_inflow" jdbcType="DECIMAL" property="balanceFinancingInflow" />
    <result column="financing_inflowsubtotal" jdbcType="DECIMAL" property="financingInflowsubtotal" />
    <result column="debt_redemption" jdbcType="DECIMAL" property="debtRedemption" />
    <result column="cash_payment" jdbcType="DECIMAL" property="cashPayment" />
    <result column="subsidiary_dividend" jdbcType="DECIMAL" property="subsidiaryDividend" />
    <result column="financing_payment" jdbcType="DECIMAL" property="financingPayment" />
    <result column="special_finaning_outflow" jdbcType="DECIMAL" property="specialFinaningOutflow" />
    <result column="balance_financing_outflow" jdbcType="DECIMAL" property="balanceFinancingOutflow" />
    <result column="financing_outflowsubtotal" jdbcType="DECIMAL" property="financingOutflowsubtotal" />
    <result column="financing_project_balance" jdbcType="DECIMAL" property="financingProjectBalance" />
    <result column="fiinancing_cash_net" jdbcType="DECIMAL" property="fiinancingCashNet" />
    <result column="exchange_rate_change" jdbcType="DECIMAL" property="exchangeRateChange" />
    <result column="direct_add_difference" jdbcType="DECIMAL" property="directAddDifference" />
    <result column="direct_add_balance" jdbcType="DECIMAL" property="directAddBalance" />
    <result column="increase_net" jdbcType="DECIMAL" property="increaseNet" />
    <result column="initial_balance" jdbcType="DECIMAL" property="initialBalance" />
    <result column="ending_balance" jdbcType="DECIMAL" property="endingBalance" />
    <result column="currency_display" jdbcType="VARCHAR" property="currencyDisplay" />
    <result column="data_supplement" jdbcType="VARCHAR" property="dataSupplement" />
    <result column="net_profit" jdbcType="DECIMAL" property="netProfit" />
    <result column="asset_impairment_proviision" jdbcType="DECIMAL" property="assetImpairmentProviision" />
    <result column="fixed_asset_depreciation" jdbcType="DECIMAL" property="fixedAssetDepreciation" />
    <result column="invisible_asset_amortize" jdbcType="DECIMAL" property="invisibleAssetAmortize" />
    <result column="long_term_amortization" jdbcType="DECIMAL" property="longTermAmortization" />
    <result column="deferred_expenses_reduce" jdbcType="DECIMAL" property="deferredExpensesReduce" />
    <result column="accrued_expenses_add" jdbcType="DECIMAL" property="accruedExpensesAdd" />
    <result column="handle_property_lose" jdbcType="DECIMAL" property="handlePropertyLose" />
    <result column="fiexd_asset_lose" jdbcType="DECIMAL" property="fiexdAssetLose" />
    <result column="fair_value_lose" jdbcType="DECIMAL" property="fairValueLose" />
    <result column="finance_cost" jdbcType="DECIMAL" property="financeCost" />
    <result column="investment_lose" jdbcType="DECIMAL" property="investmentLose" />
    <result column="defer_property_reduce" jdbcType="DECIMAL" property="deferPropertyReduce" />
    <result column="defer_liabilities_add" jdbcType="DECIMAL" property="deferLiabilitiesAdd" />
    <result column="inventory_reduce" jdbcType="DECIMAL" property="inventoryReduce" />
    <result column="operating_receivable_reduce" jdbcType="DECIMAL" property="operatingReceivableReduce" />
    <result column="operating_receivable_add" jdbcType="DECIMAL" property="operatingReceivableAdd" />
    <result column="undetermined_investment_lose" jdbcType="DECIMAL" property="undeterminedInvestmentLose" />
    <result column="other" jdbcType="DECIMAL" property="other" />
    <result column="indirect_add_difference" jdbcType="DECIMAL" property="indirectAddDifference" />
    <result column="indirect_add_balance" jdbcType="DECIMAL" property="indirectAddBalance" />
    <result column="indirect_manage_net" jdbcType="DECIMAL" property="indirectManageNet" />
    <result column="debt_turn_capital" jdbcType="DECIMAL" property="debtTurnCapital" />
    <result column="convertible_bond" jdbcType="DECIMAL" property="convertibleBond" />
    <result column="financing_fixed_asset" jdbcType="DECIMAL" property="financingFixedAsset" />
    <result column="cash_balance" jdbcType="DECIMAL" property="cashBalance" />
    <result column="reduce_cash_begin" jdbcType="DECIMAL" property="reduceCashBegin" />
    <result column="add_equivalent_final" jdbcType="DECIMAL" property="addEquivalentFinal" />
    <result column="reduce_equivalent_begin" jdbcType="DECIMAL" property="reduceEquivalentBegin" />
    <result column="add_indirect_difference" jdbcType="DECIMAL" property="addIndirectDifference" />
    <result column="add_indirect_balance" jdbcType="DECIMAL" property="addIndirectBalance" />
    <result column="add_net_increase" jdbcType="DECIMAL" property="addNetIncrease" />
    <result column="original_currency" jdbcType="VARCHAR" property="originalCurrency" />
    <result column="Exchange_rate" jdbcType="VARCHAR" property="exchangeRate" />
    <result column="Rate_Type" jdbcType="VARCHAR" property="rateType" />
    <result column="audit_opinion" jdbcType="VARCHAR" property="auditOpinion" />
    <result column="Audit_opinion_outside" jdbcType="VARCHAR" property="auditOpinionOutside" />
    <result column="declaration_date" jdbcType="DATE" property="declarationDate" />
    <result column="data_sources" jdbcType="VARCHAR" property="dataSources" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="deteledstatus" jdbcType="INTEGER" property="deteledstatus" />
    <result column="r_date" jdbcType="VARCHAR" property="rDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, stockitemid, report_date, report_type, financing_cash, investment_cash, subsidiary_shareholder, 
    cash_loan, other_financing, bond_cash, special_financing_inflow, balance_financing_inflow, 
    financing_inflowsubtotal, debt_redemption, cash_payment, subsidiary_dividend, financing_payment, 
    special_finaning_outflow, balance_financing_outflow, financing_outflowsubtotal, financing_project_balance, 
    fiinancing_cash_net, exchange_rate_change, direct_add_difference, direct_add_balance, 
    increase_net, initial_balance, ending_balance, currency_display, data_supplement, 
    net_profit, asset_impairment_proviision, fixed_asset_depreciation, invisible_asset_amortize, 
    long_term_amortization, deferred_expenses_reduce, accrued_expenses_add, handle_property_lose, 
    fiexd_asset_lose, fair_value_lose, finance_cost, investment_lose, defer_property_reduce, 
    defer_liabilities_add, inventory_reduce, operating_receivable_reduce, operating_receivable_add, 
    undetermined_investment_lose, other, indirect_add_difference, indirect_add_balance, 
    indirect_manage_net, debt_turn_capital, convertible_bond, financing_fixed_asset, 
    cash_balance, reduce_cash_begin, add_equivalent_final, reduce_equivalent_begin, add_indirect_difference, 
    add_indirect_balance, add_net_increase, original_currency, Exchange_rate, Rate_Type, 
    audit_opinion, Audit_opinion_outside, declaration_date, data_sources, create_date, 
    update_date, deteledstatus, r_date
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.bean.CashFlowExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cash_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from cash_flow
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from cash_flow
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.bean.CashFlowExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from cash_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.bean.CashFlow">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into cash_flow (id, stockitemid, report_date, 
      report_type, financing_cash, investment_cash, 
      subsidiary_shareholder, cash_loan, other_financing, 
      bond_cash, special_financing_inflow, balance_financing_inflow, 
      financing_inflowsubtotal, debt_redemption, 
      cash_payment, subsidiary_dividend, financing_payment, 
      special_finaning_outflow, balance_financing_outflow, 
      financing_outflowsubtotal, financing_project_balance, 
      fiinancing_cash_net, exchange_rate_change, 
      direct_add_difference, direct_add_balance, 
      increase_net, initial_balance, ending_balance, 
      currency_display, data_supplement, net_profit, 
      asset_impairment_proviision, fixed_asset_depreciation, 
      invisible_asset_amortize, long_term_amortization, 
      deferred_expenses_reduce, accrued_expenses_add, 
      handle_property_lose, fiexd_asset_lose, fair_value_lose, 
      finance_cost, investment_lose, defer_property_reduce, 
      defer_liabilities_add, inventory_reduce, operating_receivable_reduce, 
      operating_receivable_add, undetermined_investment_lose, 
      other, indirect_add_difference, indirect_add_balance, 
      indirect_manage_net, debt_turn_capital, convertible_bond, 
      financing_fixed_asset, cash_balance, reduce_cash_begin, 
      add_equivalent_final, reduce_equivalent_begin, 
      add_indirect_difference, add_indirect_balance, 
      add_net_increase, original_currency, Exchange_rate, 
      Rate_Type, audit_opinion, Audit_opinion_outside, 
      declaration_date, data_sources, create_date, 
      update_date, deteledstatus, r_date
      )
    values (#{id,jdbcType=VARCHAR}, #{stockitemid,jdbcType=VARCHAR}, #{reportDate,jdbcType=VARCHAR}, 
      #{reportType,jdbcType=VARCHAR}, #{financingCash,jdbcType=DECIMAL}, #{investmentCash,jdbcType=DECIMAL}, 
      #{subsidiaryShareholder,jdbcType=DECIMAL}, #{cashLoan,jdbcType=DECIMAL}, #{otherFinancing,jdbcType=DECIMAL}, 
      #{bondCash,jdbcType=DECIMAL}, #{specialFinancingInflow,jdbcType=DECIMAL}, #{balanceFinancingInflow,jdbcType=DECIMAL}, 
      #{financingInflowsubtotal,jdbcType=DECIMAL}, #{debtRedemption,jdbcType=DECIMAL}, 
      #{cashPayment,jdbcType=DECIMAL}, #{subsidiaryDividend,jdbcType=DECIMAL}, #{financingPayment,jdbcType=DECIMAL}, 
      #{specialFinaningOutflow,jdbcType=DECIMAL}, #{balanceFinancingOutflow,jdbcType=DECIMAL}, 
      #{financingOutflowsubtotal,jdbcType=DECIMAL}, #{financingProjectBalance,jdbcType=DECIMAL}, 
      #{fiinancingCashNet,jdbcType=DECIMAL}, #{exchangeRateChange,jdbcType=DECIMAL}, 
      #{directAddDifference,jdbcType=DECIMAL}, #{directAddBalance,jdbcType=DECIMAL}, 
      #{increaseNet,jdbcType=DECIMAL}, #{initialBalance,jdbcType=DECIMAL}, #{endingBalance,jdbcType=DECIMAL}, 
      #{currencyDisplay,jdbcType=VARCHAR}, #{dataSupplement,jdbcType=VARCHAR}, #{netProfit,jdbcType=DECIMAL}, 
      #{assetImpairmentProviision,jdbcType=DECIMAL}, #{fixedAssetDepreciation,jdbcType=DECIMAL}, 
      #{invisibleAssetAmortize,jdbcType=DECIMAL}, #{longTermAmortization,jdbcType=DECIMAL}, 
      #{deferredExpensesReduce,jdbcType=DECIMAL}, #{accruedExpensesAdd,jdbcType=DECIMAL}, 
      #{handlePropertyLose,jdbcType=DECIMAL}, #{fiexdAssetLose,jdbcType=DECIMAL}, #{fairValueLose,jdbcType=DECIMAL}, 
      #{financeCost,jdbcType=DECIMAL}, #{investmentLose,jdbcType=DECIMAL}, #{deferPropertyReduce,jdbcType=DECIMAL}, 
      #{deferLiabilitiesAdd,jdbcType=DECIMAL}, #{inventoryReduce,jdbcType=DECIMAL}, #{operatingReceivableReduce,jdbcType=DECIMAL}, 
      #{operatingReceivableAdd,jdbcType=DECIMAL}, #{undeterminedInvestmentLose,jdbcType=DECIMAL}, 
      #{other,jdbcType=DECIMAL}, #{indirectAddDifference,jdbcType=DECIMAL}, #{indirectAddBalance,jdbcType=DECIMAL}, 
      #{indirectManageNet,jdbcType=DECIMAL}, #{debtTurnCapital,jdbcType=DECIMAL}, #{convertibleBond,jdbcType=DECIMAL}, 
      #{financingFixedAsset,jdbcType=DECIMAL}, #{cashBalance,jdbcType=DECIMAL}, #{reduceCashBegin,jdbcType=DECIMAL}, 
      #{addEquivalentFinal,jdbcType=DECIMAL}, #{reduceEquivalentBegin,jdbcType=DECIMAL}, 
      #{addIndirectDifference,jdbcType=DECIMAL}, #{addIndirectBalance,jdbcType=DECIMAL}, 
      #{addNetIncrease,jdbcType=DECIMAL}, #{originalCurrency,jdbcType=VARCHAR}, #{exchangeRate,jdbcType=VARCHAR}, 
      #{rateType,jdbcType=VARCHAR}, #{auditOpinion,jdbcType=VARCHAR}, #{auditOpinionOutside,jdbcType=VARCHAR}, 
      #{declarationDate,jdbcType=DATE}, #{dataSources,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{deteledstatus,jdbcType=INTEGER}, #{rDate,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.bean.CashFlow">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into cash_flow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="stockitemid != null">
        stockitemid,
      </if>
      <if test="reportDate != null">
        report_date,
      </if>
      <if test="reportType != null">
        report_type,
      </if>
      <if test="financingCash != null">
        financing_cash,
      </if>
      <if test="investmentCash != null">
        investment_cash,
      </if>
      <if test="subsidiaryShareholder != null">
        subsidiary_shareholder,
      </if>
      <if test="cashLoan != null">
        cash_loan,
      </if>
      <if test="otherFinancing != null">
        other_financing,
      </if>
      <if test="bondCash != null">
        bond_cash,
      </if>
      <if test="specialFinancingInflow != null">
        special_financing_inflow,
      </if>
      <if test="balanceFinancingInflow != null">
        balance_financing_inflow,
      </if>
      <if test="financingInflowsubtotal != null">
        financing_inflowsubtotal,
      </if>
      <if test="debtRedemption != null">
        debt_redemption,
      </if>
      <if test="cashPayment != null">
        cash_payment,
      </if>
      <if test="subsidiaryDividend != null">
        subsidiary_dividend,
      </if>
      <if test="financingPayment != null">
        financing_payment,
      </if>
      <if test="specialFinaningOutflow != null">
        special_finaning_outflow,
      </if>
      <if test="balanceFinancingOutflow != null">
        balance_financing_outflow,
      </if>
      <if test="financingOutflowsubtotal != null">
        financing_outflowsubtotal,
      </if>
      <if test="financingProjectBalance != null">
        financing_project_balance,
      </if>
      <if test="fiinancingCashNet != null">
        fiinancing_cash_net,
      </if>
      <if test="exchangeRateChange != null">
        exchange_rate_change,
      </if>
      <if test="directAddDifference != null">
        direct_add_difference,
      </if>
      <if test="directAddBalance != null">
        direct_add_balance,
      </if>
      <if test="increaseNet != null">
        increase_net,
      </if>
      <if test="initialBalance != null">
        initial_balance,
      </if>
      <if test="endingBalance != null">
        ending_balance,
      </if>
      <if test="currencyDisplay != null">
        currency_display,
      </if>
      <if test="dataSupplement != null">
        data_supplement,
      </if>
      <if test="netProfit != null">
        net_profit,
      </if>
      <if test="assetImpairmentProviision != null">
        asset_impairment_proviision,
      </if>
      <if test="fixedAssetDepreciation != null">
        fixed_asset_depreciation,
      </if>
      <if test="invisibleAssetAmortize != null">
        invisible_asset_amortize,
      </if>
      <if test="longTermAmortization != null">
        long_term_amortization,
      </if>
      <if test="deferredExpensesReduce != null">
        deferred_expenses_reduce,
      </if>
      <if test="accruedExpensesAdd != null">
        accrued_expenses_add,
      </if>
      <if test="handlePropertyLose != null">
        handle_property_lose,
      </if>
      <if test="fiexdAssetLose != null">
        fiexd_asset_lose,
      </if>
      <if test="fairValueLose != null">
        fair_value_lose,
      </if>
      <if test="financeCost != null">
        finance_cost,
      </if>
      <if test="investmentLose != null">
        investment_lose,
      </if>
      <if test="deferPropertyReduce != null">
        defer_property_reduce,
      </if>
      <if test="deferLiabilitiesAdd != null">
        defer_liabilities_add,
      </if>
      <if test="inventoryReduce != null">
        inventory_reduce,
      </if>
      <if test="operatingReceivableReduce != null">
        operating_receivable_reduce,
      </if>
      <if test="operatingReceivableAdd != null">
        operating_receivable_add,
      </if>
      <if test="undeterminedInvestmentLose != null">
        undetermined_investment_lose,
      </if>
      <if test="other != null">
        other,
      </if>
      <if test="indirectAddDifference != null">
        indirect_add_difference,
      </if>
      <if test="indirectAddBalance != null">
        indirect_add_balance,
      </if>
      <if test="indirectManageNet != null">
        indirect_manage_net,
      </if>
      <if test="debtTurnCapital != null">
        debt_turn_capital,
      </if>
      <if test="convertibleBond != null">
        convertible_bond,
      </if>
      <if test="financingFixedAsset != null">
        financing_fixed_asset,
      </if>
      <if test="cashBalance != null">
        cash_balance,
      </if>
      <if test="reduceCashBegin != null">
        reduce_cash_begin,
      </if>
      <if test="addEquivalentFinal != null">
        add_equivalent_final,
      </if>
      <if test="reduceEquivalentBegin != null">
        reduce_equivalent_begin,
      </if>
      <if test="addIndirectDifference != null">
        add_indirect_difference,
      </if>
      <if test="addIndirectBalance != null">
        add_indirect_balance,
      </if>
      <if test="addNetIncrease != null">
        add_net_increase,
      </if>
      <if test="originalCurrency != null">
        original_currency,
      </if>
      <if test="exchangeRate != null">
        Exchange_rate,
      </if>
      <if test="rateType != null">
        Rate_Type,
      </if>
      <if test="auditOpinion != null">
        audit_opinion,
      </if>
      <if test="auditOpinionOutside != null">
        Audit_opinion_outside,
      </if>
      <if test="declarationDate != null">
        declaration_date,
      </if>
      <if test="dataSources != null">
        data_sources,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="deteledstatus != null">
        deteledstatus,
      </if>
      <if test="rDate != null">
        r_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="stockitemid != null">
        #{stockitemid,jdbcType=VARCHAR},
      </if>
      <if test="reportDate != null">
        #{reportDate,jdbcType=VARCHAR},
      </if>
      <if test="reportType != null">
        #{reportType,jdbcType=VARCHAR},
      </if>
      <if test="financingCash != null">
        #{financingCash,jdbcType=DECIMAL},
      </if>
      <if test="investmentCash != null">
        #{investmentCash,jdbcType=DECIMAL},
      </if>
      <if test="subsidiaryShareholder != null">
        #{subsidiaryShareholder,jdbcType=DECIMAL},
      </if>
      <if test="cashLoan != null">
        #{cashLoan,jdbcType=DECIMAL},
      </if>
      <if test="otherFinancing != null">
        #{otherFinancing,jdbcType=DECIMAL},
      </if>
      <if test="bondCash != null">
        #{bondCash,jdbcType=DECIMAL},
      </if>
      <if test="specialFinancingInflow != null">
        #{specialFinancingInflow,jdbcType=DECIMAL},
      </if>
      <if test="balanceFinancingInflow != null">
        #{balanceFinancingInflow,jdbcType=DECIMAL},
      </if>
      <if test="financingInflowsubtotal != null">
        #{financingInflowsubtotal,jdbcType=DECIMAL},
      </if>
      <if test="debtRedemption != null">
        #{debtRedemption,jdbcType=DECIMAL},
      </if>
      <if test="cashPayment != null">
        #{cashPayment,jdbcType=DECIMAL},
      </if>
      <if test="subsidiaryDividend != null">
        #{subsidiaryDividend,jdbcType=DECIMAL},
      </if>
      <if test="financingPayment != null">
        #{financingPayment,jdbcType=DECIMAL},
      </if>
      <if test="specialFinaningOutflow != null">
        #{specialFinaningOutflow,jdbcType=DECIMAL},
      </if>
      <if test="balanceFinancingOutflow != null">
        #{balanceFinancingOutflow,jdbcType=DECIMAL},
      </if>
      <if test="financingOutflowsubtotal != null">
        #{financingOutflowsubtotal,jdbcType=DECIMAL},
      </if>
      <if test="financingProjectBalance != null">
        #{financingProjectBalance,jdbcType=DECIMAL},
      </if>
      <if test="fiinancingCashNet != null">
        #{fiinancingCashNet,jdbcType=DECIMAL},
      </if>
      <if test="exchangeRateChange != null">
        #{exchangeRateChange,jdbcType=DECIMAL},
      </if>
      <if test="directAddDifference != null">
        #{directAddDifference,jdbcType=DECIMAL},
      </if>
      <if test="directAddBalance != null">
        #{directAddBalance,jdbcType=DECIMAL},
      </if>
      <if test="increaseNet != null">
        #{increaseNet,jdbcType=DECIMAL},
      </if>
      <if test="initialBalance != null">
        #{initialBalance,jdbcType=DECIMAL},
      </if>
      <if test="endingBalance != null">
        #{endingBalance,jdbcType=DECIMAL},
      </if>
      <if test="currencyDisplay != null">
        #{currencyDisplay,jdbcType=VARCHAR},
      </if>
      <if test="dataSupplement != null">
        #{dataSupplement,jdbcType=VARCHAR},
      </if>
      <if test="netProfit != null">
        #{netProfit,jdbcType=DECIMAL},
      </if>
      <if test="assetImpairmentProviision != null">
        #{assetImpairmentProviision,jdbcType=DECIMAL},
      </if>
      <if test="fixedAssetDepreciation != null">
        #{fixedAssetDepreciation,jdbcType=DECIMAL},
      </if>
      <if test="invisibleAssetAmortize != null">
        #{invisibleAssetAmortize,jdbcType=DECIMAL},
      </if>
      <if test="longTermAmortization != null">
        #{longTermAmortization,jdbcType=DECIMAL},
      </if>
      <if test="deferredExpensesReduce != null">
        #{deferredExpensesReduce,jdbcType=DECIMAL},
      </if>
      <if test="accruedExpensesAdd != null">
        #{accruedExpensesAdd,jdbcType=DECIMAL},
      </if>
      <if test="handlePropertyLose != null">
        #{handlePropertyLose,jdbcType=DECIMAL},
      </if>
      <if test="fiexdAssetLose != null">
        #{fiexdAssetLose,jdbcType=DECIMAL},
      </if>
      <if test="fairValueLose != null">
        #{fairValueLose,jdbcType=DECIMAL},
      </if>
      <if test="financeCost != null">
        #{financeCost,jdbcType=DECIMAL},
      </if>
      <if test="investmentLose != null">
        #{investmentLose,jdbcType=DECIMAL},
      </if>
      <if test="deferPropertyReduce != null">
        #{deferPropertyReduce,jdbcType=DECIMAL},
      </if>
      <if test="deferLiabilitiesAdd != null">
        #{deferLiabilitiesAdd,jdbcType=DECIMAL},
      </if>
      <if test="inventoryReduce != null">
        #{inventoryReduce,jdbcType=DECIMAL},
      </if>
      <if test="operatingReceivableReduce != null">
        #{operatingReceivableReduce,jdbcType=DECIMAL},
      </if>
      <if test="operatingReceivableAdd != null">
        #{operatingReceivableAdd,jdbcType=DECIMAL},
      </if>
      <if test="undeterminedInvestmentLose != null">
        #{undeterminedInvestmentLose,jdbcType=DECIMAL},
      </if>
      <if test="other != null">
        #{other,jdbcType=DECIMAL},
      </if>
      <if test="indirectAddDifference != null">
        #{indirectAddDifference,jdbcType=DECIMAL},
      </if>
      <if test="indirectAddBalance != null">
        #{indirectAddBalance,jdbcType=DECIMAL},
      </if>
      <if test="indirectManageNet != null">
        #{indirectManageNet,jdbcType=DECIMAL},
      </if>
      <if test="debtTurnCapital != null">
        #{debtTurnCapital,jdbcType=DECIMAL},
      </if>
      <if test="convertibleBond != null">
        #{convertibleBond,jdbcType=DECIMAL},
      </if>
      <if test="financingFixedAsset != null">
        #{financingFixedAsset,jdbcType=DECIMAL},
      </if>
      <if test="cashBalance != null">
        #{cashBalance,jdbcType=DECIMAL},
      </if>
      <if test="reduceCashBegin != null">
        #{reduceCashBegin,jdbcType=DECIMAL},
      </if>
      <if test="addEquivalentFinal != null">
        #{addEquivalentFinal,jdbcType=DECIMAL},
      </if>
      <if test="reduceEquivalentBegin != null">
        #{reduceEquivalentBegin,jdbcType=DECIMAL},
      </if>
      <if test="addIndirectDifference != null">
        #{addIndirectDifference,jdbcType=DECIMAL},
      </if>
      <if test="addIndirectBalance != null">
        #{addIndirectBalance,jdbcType=DECIMAL},
      </if>
      <if test="addNetIncrease != null">
        #{addNetIncrease,jdbcType=DECIMAL},
      </if>
      <if test="originalCurrency != null">
        #{originalCurrency,jdbcType=VARCHAR},
      </if>
      <if test="exchangeRate != null">
        #{exchangeRate,jdbcType=VARCHAR},
      </if>
      <if test="rateType != null">
        #{rateType,jdbcType=VARCHAR},
      </if>
      <if test="auditOpinion != null">
        #{auditOpinion,jdbcType=VARCHAR},
      </if>
      <if test="auditOpinionOutside != null">
        #{auditOpinionOutside,jdbcType=VARCHAR},
      </if>
      <if test="declarationDate != null">
        #{declarationDate,jdbcType=DATE},
      </if>
      <if test="dataSources != null">
        #{dataSources,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deteledstatus != null">
        #{deteledstatus,jdbcType=INTEGER},
      </if>
      <if test="rDate != null">
        #{rDate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.bean.CashFlowExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from cash_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update cash_flow
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.stockitemid != null">
        stockitemid = #{record.stockitemid,jdbcType=VARCHAR},
      </if>
      <if test="record.reportDate != null">
        report_date = #{record.reportDate,jdbcType=VARCHAR},
      </if>
      <if test="record.reportType != null">
        report_type = #{record.reportType,jdbcType=VARCHAR},
      </if>
      <if test="record.financingCash != null">
        financing_cash = #{record.financingCash,jdbcType=DECIMAL},
      </if>
      <if test="record.investmentCash != null">
        investment_cash = #{record.investmentCash,jdbcType=DECIMAL},
      </if>
      <if test="record.subsidiaryShareholder != null">
        subsidiary_shareholder = #{record.subsidiaryShareholder,jdbcType=DECIMAL},
      </if>
      <if test="record.cashLoan != null">
        cash_loan = #{record.cashLoan,jdbcType=DECIMAL},
      </if>
      <if test="record.otherFinancing != null">
        other_financing = #{record.otherFinancing,jdbcType=DECIMAL},
      </if>
      <if test="record.bondCash != null">
        bond_cash = #{record.bondCash,jdbcType=DECIMAL},
      </if>
      <if test="record.specialFinancingInflow != null">
        special_financing_inflow = #{record.specialFinancingInflow,jdbcType=DECIMAL},
      </if>
      <if test="record.balanceFinancingInflow != null">
        balance_financing_inflow = #{record.balanceFinancingInflow,jdbcType=DECIMAL},
      </if>
      <if test="record.financingInflowsubtotal != null">
        financing_inflowsubtotal = #{record.financingInflowsubtotal,jdbcType=DECIMAL},
      </if>
      <if test="record.debtRedemption != null">
        debt_redemption = #{record.debtRedemption,jdbcType=DECIMAL},
      </if>
      <if test="record.cashPayment != null">
        cash_payment = #{record.cashPayment,jdbcType=DECIMAL},
      </if>
      <if test="record.subsidiaryDividend != null">
        subsidiary_dividend = #{record.subsidiaryDividend,jdbcType=DECIMAL},
      </if>
      <if test="record.financingPayment != null">
        financing_payment = #{record.financingPayment,jdbcType=DECIMAL},
      </if>
      <if test="record.specialFinaningOutflow != null">
        special_finaning_outflow = #{record.specialFinaningOutflow,jdbcType=DECIMAL},
      </if>
      <if test="record.balanceFinancingOutflow != null">
        balance_financing_outflow = #{record.balanceFinancingOutflow,jdbcType=DECIMAL},
      </if>
      <if test="record.financingOutflowsubtotal != null">
        financing_outflowsubtotal = #{record.financingOutflowsubtotal,jdbcType=DECIMAL},
      </if>
      <if test="record.financingProjectBalance != null">
        financing_project_balance = #{record.financingProjectBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.fiinancingCashNet != null">
        fiinancing_cash_net = #{record.fiinancingCashNet,jdbcType=DECIMAL},
      </if>
      <if test="record.exchangeRateChange != null">
        exchange_rate_change = #{record.exchangeRateChange,jdbcType=DECIMAL},
      </if>
      <if test="record.directAddDifference != null">
        direct_add_difference = #{record.directAddDifference,jdbcType=DECIMAL},
      </if>
      <if test="record.directAddBalance != null">
        direct_add_balance = #{record.directAddBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.increaseNet != null">
        increase_net = #{record.increaseNet,jdbcType=DECIMAL},
      </if>
      <if test="record.initialBalance != null">
        initial_balance = #{record.initialBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.endingBalance != null">
        ending_balance = #{record.endingBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.currencyDisplay != null">
        currency_display = #{record.currencyDisplay,jdbcType=VARCHAR},
      </if>
      <if test="record.dataSupplement != null">
        data_supplement = #{record.dataSupplement,jdbcType=VARCHAR},
      </if>
      <if test="record.netProfit != null">
        net_profit = #{record.netProfit,jdbcType=DECIMAL},
      </if>
      <if test="record.assetImpairmentProviision != null">
        asset_impairment_proviision = #{record.assetImpairmentProviision,jdbcType=DECIMAL},
      </if>
      <if test="record.fixedAssetDepreciation != null">
        fixed_asset_depreciation = #{record.fixedAssetDepreciation,jdbcType=DECIMAL},
      </if>
      <if test="record.invisibleAssetAmortize != null">
        invisible_asset_amortize = #{record.invisibleAssetAmortize,jdbcType=DECIMAL},
      </if>
      <if test="record.longTermAmortization != null">
        long_term_amortization = #{record.longTermAmortization,jdbcType=DECIMAL},
      </if>
      <if test="record.deferredExpensesReduce != null">
        deferred_expenses_reduce = #{record.deferredExpensesReduce,jdbcType=DECIMAL},
      </if>
      <if test="record.accruedExpensesAdd != null">
        accrued_expenses_add = #{record.accruedExpensesAdd,jdbcType=DECIMAL},
      </if>
      <if test="record.handlePropertyLose != null">
        handle_property_lose = #{record.handlePropertyLose,jdbcType=DECIMAL},
      </if>
      <if test="record.fiexdAssetLose != null">
        fiexd_asset_lose = #{record.fiexdAssetLose,jdbcType=DECIMAL},
      </if>
      <if test="record.fairValueLose != null">
        fair_value_lose = #{record.fairValueLose,jdbcType=DECIMAL},
      </if>
      <if test="record.financeCost != null">
        finance_cost = #{record.financeCost,jdbcType=DECIMAL},
      </if>
      <if test="record.investmentLose != null">
        investment_lose = #{record.investmentLose,jdbcType=DECIMAL},
      </if>
      <if test="record.deferPropertyReduce != null">
        defer_property_reduce = #{record.deferPropertyReduce,jdbcType=DECIMAL},
      </if>
      <if test="record.deferLiabilitiesAdd != null">
        defer_liabilities_add = #{record.deferLiabilitiesAdd,jdbcType=DECIMAL},
      </if>
      <if test="record.inventoryReduce != null">
        inventory_reduce = #{record.inventoryReduce,jdbcType=DECIMAL},
      </if>
      <if test="record.operatingReceivableReduce != null">
        operating_receivable_reduce = #{record.operatingReceivableReduce,jdbcType=DECIMAL},
      </if>
      <if test="record.operatingReceivableAdd != null">
        operating_receivable_add = #{record.operatingReceivableAdd,jdbcType=DECIMAL},
      </if>
      <if test="record.undeterminedInvestmentLose != null">
        undetermined_investment_lose = #{record.undeterminedInvestmentLose,jdbcType=DECIMAL},
      </if>
      <if test="record.other != null">
        other = #{record.other,jdbcType=DECIMAL},
      </if>
      <if test="record.indirectAddDifference != null">
        indirect_add_difference = #{record.indirectAddDifference,jdbcType=DECIMAL},
      </if>
      <if test="record.indirectAddBalance != null">
        indirect_add_balance = #{record.indirectAddBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.indirectManageNet != null">
        indirect_manage_net = #{record.indirectManageNet,jdbcType=DECIMAL},
      </if>
      <if test="record.debtTurnCapital != null">
        debt_turn_capital = #{record.debtTurnCapital,jdbcType=DECIMAL},
      </if>
      <if test="record.convertibleBond != null">
        convertible_bond = #{record.convertibleBond,jdbcType=DECIMAL},
      </if>
      <if test="record.financingFixedAsset != null">
        financing_fixed_asset = #{record.financingFixedAsset,jdbcType=DECIMAL},
      </if>
      <if test="record.cashBalance != null">
        cash_balance = #{record.cashBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.reduceCashBegin != null">
        reduce_cash_begin = #{record.reduceCashBegin,jdbcType=DECIMAL},
      </if>
      <if test="record.addEquivalentFinal != null">
        add_equivalent_final = #{record.addEquivalentFinal,jdbcType=DECIMAL},
      </if>
      <if test="record.reduceEquivalentBegin != null">
        reduce_equivalent_begin = #{record.reduceEquivalentBegin,jdbcType=DECIMAL},
      </if>
      <if test="record.addIndirectDifference != null">
        add_indirect_difference = #{record.addIndirectDifference,jdbcType=DECIMAL},
      </if>
      <if test="record.addIndirectBalance != null">
        add_indirect_balance = #{record.addIndirectBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.addNetIncrease != null">
        add_net_increase = #{record.addNetIncrease,jdbcType=DECIMAL},
      </if>
      <if test="record.originalCurrency != null">
        original_currency = #{record.originalCurrency,jdbcType=VARCHAR},
      </if>
      <if test="record.exchangeRate != null">
        Exchange_rate = #{record.exchangeRate,jdbcType=VARCHAR},
      </if>
      <if test="record.rateType != null">
        Rate_Type = #{record.rateType,jdbcType=VARCHAR},
      </if>
      <if test="record.auditOpinion != null">
        audit_opinion = #{record.auditOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.auditOpinionOutside != null">
        Audit_opinion_outside = #{record.auditOpinionOutside,jdbcType=VARCHAR},
      </if>
      <if test="record.declarationDate != null">
        declaration_date = #{record.declarationDate,jdbcType=DATE},
      </if>
      <if test="record.dataSources != null">
        data_sources = #{record.dataSources,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deteledstatus != null">
        deteledstatus = #{record.deteledstatus,jdbcType=INTEGER},
      </if>
      <if test="record.rDate != null">
        r_date = #{record.rDate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update cash_flow
    set id = #{record.id,jdbcType=VARCHAR},
      stockitemid = #{record.stockitemid,jdbcType=VARCHAR},
      report_date = #{record.reportDate,jdbcType=VARCHAR},
      report_type = #{record.reportType,jdbcType=VARCHAR},
      financing_cash = #{record.financingCash,jdbcType=DECIMAL},
      investment_cash = #{record.investmentCash,jdbcType=DECIMAL},
      subsidiary_shareholder = #{record.subsidiaryShareholder,jdbcType=DECIMAL},
      cash_loan = #{record.cashLoan,jdbcType=DECIMAL},
      other_financing = #{record.otherFinancing,jdbcType=DECIMAL},
      bond_cash = #{record.bondCash,jdbcType=DECIMAL},
      special_financing_inflow = #{record.specialFinancingInflow,jdbcType=DECIMAL},
      balance_financing_inflow = #{record.balanceFinancingInflow,jdbcType=DECIMAL},
      financing_inflowsubtotal = #{record.financingInflowsubtotal,jdbcType=DECIMAL},
      debt_redemption = #{record.debtRedemption,jdbcType=DECIMAL},
      cash_payment = #{record.cashPayment,jdbcType=DECIMAL},
      subsidiary_dividend = #{record.subsidiaryDividend,jdbcType=DECIMAL},
      financing_payment = #{record.financingPayment,jdbcType=DECIMAL},
      special_finaning_outflow = #{record.specialFinaningOutflow,jdbcType=DECIMAL},
      balance_financing_outflow = #{record.balanceFinancingOutflow,jdbcType=DECIMAL},
      financing_outflowsubtotal = #{record.financingOutflowsubtotal,jdbcType=DECIMAL},
      financing_project_balance = #{record.financingProjectBalance,jdbcType=DECIMAL},
      fiinancing_cash_net = #{record.fiinancingCashNet,jdbcType=DECIMAL},
      exchange_rate_change = #{record.exchangeRateChange,jdbcType=DECIMAL},
      direct_add_difference = #{record.directAddDifference,jdbcType=DECIMAL},
      direct_add_balance = #{record.directAddBalance,jdbcType=DECIMAL},
      increase_net = #{record.increaseNet,jdbcType=DECIMAL},
      initial_balance = #{record.initialBalance,jdbcType=DECIMAL},
      ending_balance = #{record.endingBalance,jdbcType=DECIMAL},
      currency_display = #{record.currencyDisplay,jdbcType=VARCHAR},
      data_supplement = #{record.dataSupplement,jdbcType=VARCHAR},
      net_profit = #{record.netProfit,jdbcType=DECIMAL},
      asset_impairment_proviision = #{record.assetImpairmentProviision,jdbcType=DECIMAL},
      fixed_asset_depreciation = #{record.fixedAssetDepreciation,jdbcType=DECIMAL},
      invisible_asset_amortize = #{record.invisibleAssetAmortize,jdbcType=DECIMAL},
      long_term_amortization = #{record.longTermAmortization,jdbcType=DECIMAL},
      deferred_expenses_reduce = #{record.deferredExpensesReduce,jdbcType=DECIMAL},
      accrued_expenses_add = #{record.accruedExpensesAdd,jdbcType=DECIMAL},
      handle_property_lose = #{record.handlePropertyLose,jdbcType=DECIMAL},
      fiexd_asset_lose = #{record.fiexdAssetLose,jdbcType=DECIMAL},
      fair_value_lose = #{record.fairValueLose,jdbcType=DECIMAL},
      finance_cost = #{record.financeCost,jdbcType=DECIMAL},
      investment_lose = #{record.investmentLose,jdbcType=DECIMAL},
      defer_property_reduce = #{record.deferPropertyReduce,jdbcType=DECIMAL},
      defer_liabilities_add = #{record.deferLiabilitiesAdd,jdbcType=DECIMAL},
      inventory_reduce = #{record.inventoryReduce,jdbcType=DECIMAL},
      operating_receivable_reduce = #{record.operatingReceivableReduce,jdbcType=DECIMAL},
      operating_receivable_add = #{record.operatingReceivableAdd,jdbcType=DECIMAL},
      undetermined_investment_lose = #{record.undeterminedInvestmentLose,jdbcType=DECIMAL},
      other = #{record.other,jdbcType=DECIMAL},
      indirect_add_difference = #{record.indirectAddDifference,jdbcType=DECIMAL},
      indirect_add_balance = #{record.indirectAddBalance,jdbcType=DECIMAL},
      indirect_manage_net = #{record.indirectManageNet,jdbcType=DECIMAL},
      debt_turn_capital = #{record.debtTurnCapital,jdbcType=DECIMAL},
      convertible_bond = #{record.convertibleBond,jdbcType=DECIMAL},
      financing_fixed_asset = #{record.financingFixedAsset,jdbcType=DECIMAL},
      cash_balance = #{record.cashBalance,jdbcType=DECIMAL},
      reduce_cash_begin = #{record.reduceCashBegin,jdbcType=DECIMAL},
      add_equivalent_final = #{record.addEquivalentFinal,jdbcType=DECIMAL},
      reduce_equivalent_begin = #{record.reduceEquivalentBegin,jdbcType=DECIMAL},
      add_indirect_difference = #{record.addIndirectDifference,jdbcType=DECIMAL},
      add_indirect_balance = #{record.addIndirectBalance,jdbcType=DECIMAL},
      add_net_increase = #{record.addNetIncrease,jdbcType=DECIMAL},
      original_currency = #{record.originalCurrency,jdbcType=VARCHAR},
      Exchange_rate = #{record.exchangeRate,jdbcType=VARCHAR},
      Rate_Type = #{record.rateType,jdbcType=VARCHAR},
      audit_opinion = #{record.auditOpinion,jdbcType=VARCHAR},
      Audit_opinion_outside = #{record.auditOpinionOutside,jdbcType=VARCHAR},
      declaration_date = #{record.declarationDate,jdbcType=DATE},
      data_sources = #{record.dataSources,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      deteledstatus = #{record.deteledstatus,jdbcType=INTEGER},
      r_date = #{record.rDate,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.bean.CashFlow">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update cash_flow
    <set>
      <if test="stockitemid != null">
        stockitemid = #{stockitemid,jdbcType=VARCHAR},
      </if>
      <if test="reportDate != null">
        report_date = #{reportDate,jdbcType=VARCHAR},
      </if>
      <if test="reportType != null">
        report_type = #{reportType,jdbcType=VARCHAR},
      </if>
      <if test="financingCash != null">
        financing_cash = #{financingCash,jdbcType=DECIMAL},
      </if>
      <if test="investmentCash != null">
        investment_cash = #{investmentCash,jdbcType=DECIMAL},
      </if>
      <if test="subsidiaryShareholder != null">
        subsidiary_shareholder = #{subsidiaryShareholder,jdbcType=DECIMAL},
      </if>
      <if test="cashLoan != null">
        cash_loan = #{cashLoan,jdbcType=DECIMAL},
      </if>
      <if test="otherFinancing != null">
        other_financing = #{otherFinancing,jdbcType=DECIMAL},
      </if>
      <if test="bondCash != null">
        bond_cash = #{bondCash,jdbcType=DECIMAL},
      </if>
      <if test="specialFinancingInflow != null">
        special_financing_inflow = #{specialFinancingInflow,jdbcType=DECIMAL},
      </if>
      <if test="balanceFinancingInflow != null">
        balance_financing_inflow = #{balanceFinancingInflow,jdbcType=DECIMAL},
      </if>
      <if test="financingInflowsubtotal != null">
        financing_inflowsubtotal = #{financingInflowsubtotal,jdbcType=DECIMAL},
      </if>
      <if test="debtRedemption != null">
        debt_redemption = #{debtRedemption,jdbcType=DECIMAL},
      </if>
      <if test="cashPayment != null">
        cash_payment = #{cashPayment,jdbcType=DECIMAL},
      </if>
      <if test="subsidiaryDividend != null">
        subsidiary_dividend = #{subsidiaryDividend,jdbcType=DECIMAL},
      </if>
      <if test="financingPayment != null">
        financing_payment = #{financingPayment,jdbcType=DECIMAL},
      </if>
      <if test="specialFinaningOutflow != null">
        special_finaning_outflow = #{specialFinaningOutflow,jdbcType=DECIMAL},
      </if>
      <if test="balanceFinancingOutflow != null">
        balance_financing_outflow = #{balanceFinancingOutflow,jdbcType=DECIMAL},
      </if>
      <if test="financingOutflowsubtotal != null">
        financing_outflowsubtotal = #{financingOutflowsubtotal,jdbcType=DECIMAL},
      </if>
      <if test="financingProjectBalance != null">
        financing_project_balance = #{financingProjectBalance,jdbcType=DECIMAL},
      </if>
      <if test="fiinancingCashNet != null">
        fiinancing_cash_net = #{fiinancingCashNet,jdbcType=DECIMAL},
      </if>
      <if test="exchangeRateChange != null">
        exchange_rate_change = #{exchangeRateChange,jdbcType=DECIMAL},
      </if>
      <if test="directAddDifference != null">
        direct_add_difference = #{directAddDifference,jdbcType=DECIMAL},
      </if>
      <if test="directAddBalance != null">
        direct_add_balance = #{directAddBalance,jdbcType=DECIMAL},
      </if>
      <if test="increaseNet != null">
        increase_net = #{increaseNet,jdbcType=DECIMAL},
      </if>
      <if test="initialBalance != null">
        initial_balance = #{initialBalance,jdbcType=DECIMAL},
      </if>
      <if test="endingBalance != null">
        ending_balance = #{endingBalance,jdbcType=DECIMAL},
      </if>
      <if test="currencyDisplay != null">
        currency_display = #{currencyDisplay,jdbcType=VARCHAR},
      </if>
      <if test="dataSupplement != null">
        data_supplement = #{dataSupplement,jdbcType=VARCHAR},
      </if>
      <if test="netProfit != null">
        net_profit = #{netProfit,jdbcType=DECIMAL},
      </if>
      <if test="assetImpairmentProviision != null">
        asset_impairment_proviision = #{assetImpairmentProviision,jdbcType=DECIMAL},
      </if>
      <if test="fixedAssetDepreciation != null">
        fixed_asset_depreciation = #{fixedAssetDepreciation,jdbcType=DECIMAL},
      </if>
      <if test="invisibleAssetAmortize != null">
        invisible_asset_amortize = #{invisibleAssetAmortize,jdbcType=DECIMAL},
      </if>
      <if test="longTermAmortization != null">
        long_term_amortization = #{longTermAmortization,jdbcType=DECIMAL},
      </if>
      <if test="deferredExpensesReduce != null">
        deferred_expenses_reduce = #{deferredExpensesReduce,jdbcType=DECIMAL},
      </if>
      <if test="accruedExpensesAdd != null">
        accrued_expenses_add = #{accruedExpensesAdd,jdbcType=DECIMAL},
      </if>
      <if test="handlePropertyLose != null">
        handle_property_lose = #{handlePropertyLose,jdbcType=DECIMAL},
      </if>
      <if test="fiexdAssetLose != null">
        fiexd_asset_lose = #{fiexdAssetLose,jdbcType=DECIMAL},
      </if>
      <if test="fairValueLose != null">
        fair_value_lose = #{fairValueLose,jdbcType=DECIMAL},
      </if>
      <if test="financeCost != null">
        finance_cost = #{financeCost,jdbcType=DECIMAL},
      </if>
      <if test="investmentLose != null">
        investment_lose = #{investmentLose,jdbcType=DECIMAL},
      </if>
      <if test="deferPropertyReduce != null">
        defer_property_reduce = #{deferPropertyReduce,jdbcType=DECIMAL},
      </if>
      <if test="deferLiabilitiesAdd != null">
        defer_liabilities_add = #{deferLiabilitiesAdd,jdbcType=DECIMAL},
      </if>
      <if test="inventoryReduce != null">
        inventory_reduce = #{inventoryReduce,jdbcType=DECIMAL},
      </if>
      <if test="operatingReceivableReduce != null">
        operating_receivable_reduce = #{operatingReceivableReduce,jdbcType=DECIMAL},
      </if>
      <if test="operatingReceivableAdd != null">
        operating_receivable_add = #{operatingReceivableAdd,jdbcType=DECIMAL},
      </if>
      <if test="undeterminedInvestmentLose != null">
        undetermined_investment_lose = #{undeterminedInvestmentLose,jdbcType=DECIMAL},
      </if>
      <if test="other != null">
        other = #{other,jdbcType=DECIMAL},
      </if>
      <if test="indirectAddDifference != null">
        indirect_add_difference = #{indirectAddDifference,jdbcType=DECIMAL},
      </if>
      <if test="indirectAddBalance != null">
        indirect_add_balance = #{indirectAddBalance,jdbcType=DECIMAL},
      </if>
      <if test="indirectManageNet != null">
        indirect_manage_net = #{indirectManageNet,jdbcType=DECIMAL},
      </if>
      <if test="debtTurnCapital != null">
        debt_turn_capital = #{debtTurnCapital,jdbcType=DECIMAL},
      </if>
      <if test="convertibleBond != null">
        convertible_bond = #{convertibleBond,jdbcType=DECIMAL},
      </if>
      <if test="financingFixedAsset != null">
        financing_fixed_asset = #{financingFixedAsset,jdbcType=DECIMAL},
      </if>
      <if test="cashBalance != null">
        cash_balance = #{cashBalance,jdbcType=DECIMAL},
      </if>
      <if test="reduceCashBegin != null">
        reduce_cash_begin = #{reduceCashBegin,jdbcType=DECIMAL},
      </if>
      <if test="addEquivalentFinal != null">
        add_equivalent_final = #{addEquivalentFinal,jdbcType=DECIMAL},
      </if>
      <if test="reduceEquivalentBegin != null">
        reduce_equivalent_begin = #{reduceEquivalentBegin,jdbcType=DECIMAL},
      </if>
      <if test="addIndirectDifference != null">
        add_indirect_difference = #{addIndirectDifference,jdbcType=DECIMAL},
      </if>
      <if test="addIndirectBalance != null">
        add_indirect_balance = #{addIndirectBalance,jdbcType=DECIMAL},
      </if>
      <if test="addNetIncrease != null">
        add_net_increase = #{addNetIncrease,jdbcType=DECIMAL},
      </if>
      <if test="originalCurrency != null">
        original_currency = #{originalCurrency,jdbcType=VARCHAR},
      </if>
      <if test="exchangeRate != null">
        Exchange_rate = #{exchangeRate,jdbcType=VARCHAR},
      </if>
      <if test="rateType != null">
        Rate_Type = #{rateType,jdbcType=VARCHAR},
      </if>
      <if test="auditOpinion != null">
        audit_opinion = #{auditOpinion,jdbcType=VARCHAR},
      </if>
      <if test="auditOpinionOutside != null">
        Audit_opinion_outside = #{auditOpinionOutside,jdbcType=VARCHAR},
      </if>
      <if test="declarationDate != null">
        declaration_date = #{declarationDate,jdbcType=DATE},
      </if>
      <if test="dataSources != null">
        data_sources = #{dataSources,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deteledstatus != null">
        deteledstatus = #{deteledstatus,jdbcType=INTEGER},
      </if>
      <if test="rDate != null">
        r_date = #{rDate,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.bean.CashFlow">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update cash_flow
    set stockitemid = #{stockitemid,jdbcType=VARCHAR},
      report_date = #{reportDate,jdbcType=VARCHAR},
      report_type = #{reportType,jdbcType=VARCHAR},
      financing_cash = #{financingCash,jdbcType=DECIMAL},
      investment_cash = #{investmentCash,jdbcType=DECIMAL},
      subsidiary_shareholder = #{subsidiaryShareholder,jdbcType=DECIMAL},
      cash_loan = #{cashLoan,jdbcType=DECIMAL},
      other_financing = #{otherFinancing,jdbcType=DECIMAL},
      bond_cash = #{bondCash,jdbcType=DECIMAL},
      special_financing_inflow = #{specialFinancingInflow,jdbcType=DECIMAL},
      balance_financing_inflow = #{balanceFinancingInflow,jdbcType=DECIMAL},
      financing_inflowsubtotal = #{financingInflowsubtotal,jdbcType=DECIMAL},
      debt_redemption = #{debtRedemption,jdbcType=DECIMAL},
      cash_payment = #{cashPayment,jdbcType=DECIMAL},
      subsidiary_dividend = #{subsidiaryDividend,jdbcType=DECIMAL},
      financing_payment = #{financingPayment,jdbcType=DECIMAL},
      special_finaning_outflow = #{specialFinaningOutflow,jdbcType=DECIMAL},
      balance_financing_outflow = #{balanceFinancingOutflow,jdbcType=DECIMAL},
      financing_outflowsubtotal = #{financingOutflowsubtotal,jdbcType=DECIMAL},
      financing_project_balance = #{financingProjectBalance,jdbcType=DECIMAL},
      fiinancing_cash_net = #{fiinancingCashNet,jdbcType=DECIMAL},
      exchange_rate_change = #{exchangeRateChange,jdbcType=DECIMAL},
      direct_add_difference = #{directAddDifference,jdbcType=DECIMAL},
      direct_add_balance = #{directAddBalance,jdbcType=DECIMAL},
      increase_net = #{increaseNet,jdbcType=DECIMAL},
      initial_balance = #{initialBalance,jdbcType=DECIMAL},
      ending_balance = #{endingBalance,jdbcType=DECIMAL},
      currency_display = #{currencyDisplay,jdbcType=VARCHAR},
      data_supplement = #{dataSupplement,jdbcType=VARCHAR},
      net_profit = #{netProfit,jdbcType=DECIMAL},
      asset_impairment_proviision = #{assetImpairmentProviision,jdbcType=DECIMAL},
      fixed_asset_depreciation = #{fixedAssetDepreciation,jdbcType=DECIMAL},
      invisible_asset_amortize = #{invisibleAssetAmortize,jdbcType=DECIMAL},
      long_term_amortization = #{longTermAmortization,jdbcType=DECIMAL},
      deferred_expenses_reduce = #{deferredExpensesReduce,jdbcType=DECIMAL},
      accrued_expenses_add = #{accruedExpensesAdd,jdbcType=DECIMAL},
      handle_property_lose = #{handlePropertyLose,jdbcType=DECIMAL},
      fiexd_asset_lose = #{fiexdAssetLose,jdbcType=DECIMAL},
      fair_value_lose = #{fairValueLose,jdbcType=DECIMAL},
      finance_cost = #{financeCost,jdbcType=DECIMAL},
      investment_lose = #{investmentLose,jdbcType=DECIMAL},
      defer_property_reduce = #{deferPropertyReduce,jdbcType=DECIMAL},
      defer_liabilities_add = #{deferLiabilitiesAdd,jdbcType=DECIMAL},
      inventory_reduce = #{inventoryReduce,jdbcType=DECIMAL},
      operating_receivable_reduce = #{operatingReceivableReduce,jdbcType=DECIMAL},
      operating_receivable_add = #{operatingReceivableAdd,jdbcType=DECIMAL},
      undetermined_investment_lose = #{undeterminedInvestmentLose,jdbcType=DECIMAL},
      other = #{other,jdbcType=DECIMAL},
      indirect_add_difference = #{indirectAddDifference,jdbcType=DECIMAL},
      indirect_add_balance = #{indirectAddBalance,jdbcType=DECIMAL},
      indirect_manage_net = #{indirectManageNet,jdbcType=DECIMAL},
      debt_turn_capital = #{debtTurnCapital,jdbcType=DECIMAL},
      convertible_bond = #{convertibleBond,jdbcType=DECIMAL},
      financing_fixed_asset = #{financingFixedAsset,jdbcType=DECIMAL},
      cash_balance = #{cashBalance,jdbcType=DECIMAL},
      reduce_cash_begin = #{reduceCashBegin,jdbcType=DECIMAL},
      add_equivalent_final = #{addEquivalentFinal,jdbcType=DECIMAL},
      reduce_equivalent_begin = #{reduceEquivalentBegin,jdbcType=DECIMAL},
      add_indirect_difference = #{addIndirectDifference,jdbcType=DECIMAL},
      add_indirect_balance = #{addIndirectBalance,jdbcType=DECIMAL},
      add_net_increase = #{addNetIncrease,jdbcType=DECIMAL},
      original_currency = #{originalCurrency,jdbcType=VARCHAR},
      Exchange_rate = #{exchangeRate,jdbcType=VARCHAR},
      Rate_Type = #{rateType,jdbcType=VARCHAR},
      audit_opinion = #{auditOpinion,jdbcType=VARCHAR},
      Audit_opinion_outside = #{auditOpinionOutside,jdbcType=VARCHAR},
      declaration_date = #{declarationDate,jdbcType=DATE},
      data_sources = #{dataSources,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      deteledstatus = #{deteledstatus,jdbcType=INTEGER},
      r_date = #{rDate,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>